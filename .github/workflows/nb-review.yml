name: Claude ML Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  ml_review:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Get PR diff safely (with fallback)
      - name: Get PR diff
        id: get_diff
        run: |
          git fetch origin main || echo "No main branch found"
          if git rev-parse --verify origin/main >/dev/null 2>&1; then
            git diff origin/main...HEAD -- '*.py' > diff.txt || echo "No diff found"
          else
            echo "‚ö†Ô∏è No main branch found, using fallback diff."
            git diff HEAD~1 -- '*.py' > diff.txt || echo "No diff found"
          fi
          cat diff.txt || echo "‚ö†Ô∏è No differences to show."

      # Step 3: Create built-in ML checklist
      - name: Create Claude checklist
        run: |
          mkdir -p .github
          cat <<'EOF' > .github/claude-checklist.yml
          # Claude ML Review Checklist
          correctness:
            - "Uses train/test split correctly"
            - "No data leakage"
            - "Has random_state or seed set"
          security:
            - "No API keys or credentials in code"
            - "No system or personal file paths exposed"
          quality:
            - "No print/debug statements"
            - "Code is modular and commented"
          reproducibility:
            - "Random seeds fixed"
            - "Dependencies clearly versioned"
          best_practices:
            - "Includes evaluation metrics"
            - "Avoids overfitting via validation"
            - "Uses proper model saving/loading"
          EOF

      # Step 4: Run Claude ML Review
      - name: Run Claude ML Review
        id: run_claude
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          model: claude-3-5-sonnet
          prompt: |
            You are a senior ML engineer reviewing a Python ML codebase.

            Review focus:
            - ‚úÖ Correctness (train/test split, data leakage)
            - ‚öôÔ∏è Security (API keys, unsafe code)
            - üßπ Quality (organization, reuse)
            - üß™ Reproducibility (seeds, environments)
            - üìä ML Best Practices (validation, metrics)

            Use the checklist below to grade the code:
            $(cat .github/claude-checklist.yml)

            The code diff is below:
            $(cat diff.txt)

            Please provide a **Markdown review** with:
            - ‚úÖ PASS / ‚ùå FAIL per item
            - Short explanation for each failure
            - A final summary (Good / Needs Fix / Risky)

      # Step 5: Save Claude output
      - name: Save Claude output
        run: echo "${{ steps.run_claude.outputs.output }}" > claude_output.txt

      # Step 6: Post Claude Review Comment (only if not blank)
      - name: Post Claude Review Comment
        if: ${{ steps.run_claude.outputs.output != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('claude_output.txt', 'utf8').trim();
            if (!output) {
              console.log("‚ö†Ô∏è Claude output is empty ‚Äî skipping comment.");
            } else {
              github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });
              console.log("‚úÖ Posted Claude review comment successfully.");
            }

      # Step 7: Block merge if issues found
      - name: Block merge if issues found
        run: |
          if grep -q "FAIL" claude_output.txt; then
            echo "‚ùå Claude Review: Issues found. Please fix before merging."
            exit 1
          else
            echo "‚úÖ Claude Review: All checks passed."
          fi
