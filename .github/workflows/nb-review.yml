name: Claude Notebook Review
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  notebook_review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract notebook code
        id: extract_code
        run: |
          mkdir extracted
          for nb in $(find . -name "*.ipynb"); do
            echo "Extracting $nb..."
            jupyter nbconvert --to script "$nb" --output-dir extracted
          done
          cat extracted/*.py > notebooks_combined.py

      - name: Get PR diff
        id: get_diff
        run: |
          git fetch origin main
          git diff origin/main...HEAD -- '*.ipynb' > diff.txt

      - name: Run Claude Notebook Review
        id: run_claude
        uses: anthropics/claude-code-action@v1
        with:
          api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: claude-3-5-sonnet
          input: |
            You are a senior ML code reviewer.
            Review this pull request's Python file for:
            - ML correctness (data leakage, random seeds)
            - Security (no API keys, model weights committed)
            - Code quality (clean cells, no debug code)
            - Reproducibility and documentation
            Use this checklist as a guide:
            $(cat .github/claude-checklist.yml)

            Notebook diff:
            $(cat diff.txt)

            Extracted notebook code:
            $(cat notebooks_combined.py)

            Return a Markdown report with:
            ✅ PASS / ❌ FAIL per rule,
            brief explanations,
            and a summary section.

      - name: Save Claude output
        run: echo "${{ steps.run_claude.outputs.output }}" > claude_output.txt

      - name: Post Claude Review Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('claude_output.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: Block merge if issues found
        run: |
          if grep -q "FAIL" claude_output.txt; then
            echo "Notebook review failed — please fix issues before merging."
            exit 1
          fi
