name: Claude ML Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  ml_review:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # fetch full history

      # Step 2: Get PR diff safely (with fallback)
      - name: Get PR diff
        id: get_diff
        run: |
          git fetch origin main || echo "No main branch found"
          if git rev-parse --verify origin/main >/dev/null 2>&1; then
            git diff origin/main...HEAD -- 'train_model_good.py' > diff.txt || echo "No diff found"
          else
            echo "No main branch found, using fallback diff."
            git diff HEAD~1 -- 'train_model_good.py' > diff.txt || echo "No diff found"
          fi
          cat diff.txt || echo "No differences to show."

      # Step 3: Run Claude ML Code Review
      - name: Run Claude ML Review
        id: run_claude
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          model: claude-3-5-sonnet
          prompt: |
            You are a senior ML engineer reviewing a Python ML file (`train_model_good.py`).
            Review for:
            - ‚úÖ Correctness (data splits, random seeds, model saving)
            - ‚öôÔ∏è Security (no API keys, no data leaks)
            - üßπ Code quality (no debug, well-structured)
            - üß™ Reproducibility (fixed seeds, dependency versions)
            - üìä ML practices (validation, overfitting check)

            Use checklist if available:
            $(cat .github/claude-checklist.yml 2>/dev/null || echo "No checklist found.")

            Code diff:
            $(cat diff.txt)

            Return a concise Markdown report with:
            ‚úÖ PASS / ‚ùå FAIL, explanation, and summary.

      # Step 4: Save Claude output
      - name: Save Claude output
        run: echo "${{ steps.run_claude.outputs.output }}" > claude_output.txt

      # Step 5: Post Claude Review Comment
      - name: Post Claude Review Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('claude_output.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      # Step 6: Block merge if issues found
      - name: Block merge if issues found
        run: |
          if grep -q "FAIL" claude_output.txt; then
            echo "‚ùå Claude Review: Issues found. Please fix before merging."
            exit 1
          else
            echo "‚úÖ Claude Review: All checks passed."
          fi
