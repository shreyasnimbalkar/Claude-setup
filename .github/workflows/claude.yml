name: Claude ML + Security + API Key Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  pull_request_review:
    types: [submitted]

permissions:
  contents: write
  pull-requests: write
  issues: write
  id-token: write

jobs:
  claude_review:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Step 2: Extract code and prepare diff
      - name: Extract code and diff
        run: |
          mkdir -p extracted
          for nb in $(find . -name "*.ipynb"); do
            jupyter nbconvert --to script "$nb" --output-dir extracted
          done
          find . -name "*.py" -exec cp {} extracted/ \;
          cat extracted/*.py > combined_code.py || echo "# no code" > combined_code.py
          git fetch origin main || true
          git diff origin/main...HEAD > diff.txt || echo "# no diff" > diff.txt

      # Step 3: Run Claude review
      - name: Claude ML + Security + API Key Review
        id: claude_review
        uses: anthropics/claude-code-action@v1
        with:
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          github_token: ${{ secrets.TESTING_TOKEN }}
          prompt: |
            You are a **senior ML engineer & security auditor**.
            Review the following PR for:
            1. ML correctness (data leakage, reproducibility, random seeds)
            2. Security vulnerabilities (RCE, pickle, SQLi)
            3. Hardcoded secrets or API keys (e.g., api_key, token, password, sk_test_, sk_live_)
            4. Code quality & reproducibility

            --- CODE DIFF ---
            $(cat diff.txt)
            --- FULL CODE ---
            $(cat combined_code.py)

            Output format:
            - File & Line
            - Severity: High / Medium
            - Category
            - Description
            - Fix Recommendation

            If no issues found:
            "✅ All checks passed: No high or medium severity issues detected."

      # Step 4: Save Claude output
      - name: Save Claude output
        run: |
          output="${{ steps.claude_review.outputs.output }}"
          if [ -z "$output" ]; then
            echo "✅ Claude review completed: No high or medium severity issues detected." > claude_output.txt
          else
            echo "$output" > claude_output.txt
          fi

      # Step 5: Post Claude review comment safely
      - name: Post Claude comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TESTING_TOKEN }}
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('claude_output.txt', 'utf8').trim();

            // Determine correct issue/PR number depending on trigger type
            const issueNumber =
              context.payload.pull_request?.number ||
              context.payload.issue?.number ||
              (context.payload.comment?.issue_url?.split('/').pop());

            if (!issueNumber) {
              core.warning("⚠️ No pull request or issue number found — skipping comment.");
            } else {
              await github.rest.issues.createComment({
                issue_number: issueNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output,
              });
            }

      # Step 6: Block merge if high-severity issues found
      - name: Block merge if issues found
        run: |
          if grep -q "❌" claude_output.txt || grep -q "HIGH" claude_output.txt; then
            echo "❌ Claude review failed — critical issues detected."
            exit 1
          else
            echo "✅ No critical issues detected. Merge allowed."
          fi
