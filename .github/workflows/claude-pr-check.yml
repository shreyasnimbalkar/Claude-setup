# .github/workflows/claude-pr-check.yml
name: Claude PR Checklist

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  claude-check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      actions: read

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Load checklist
        id: checklist
        run: |
          cat .github/claude-checklist.yml
          python - <<'PY'
import yaml, json, sys
with open(".github/claude-checklist.yml") as f:
    data = yaml.safe_load(f)
print("::set-output name=payload::" + json.dumps(data))
PY

      - name: Get changed files in PR
        id: files
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) core.setFailed("No pull_request context");
            const files = await github.paginate(github.rest.pulls.listFiles, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
            });
            const paths = files.map(f => f.filename);
            core.setOutput("files", JSON.stringify(paths));

      - name: Build prompt for Claude
        id: prompt
        run: |
          python - <<'PY'
import json,sys
files = json.loads("""${{ steps.files.outputs.files }}""")
checklist = json.loads("""${{ steps.checklist.outputs.payload }}""")
# Construct a short prompt to send to Claude (diff + checklist)
prompt = {
  "title": "Run checklist on PR",
  "files": files,
  "checklist": checklist
}
print("::set-output name=body::" + json.dumps(prompt))
PY

      - name: Call Claude review API
        id: claude_call
        # Replace with your Claude/GitHub Action integration. Example uses a hypothetical action.
        uses: anthropic/claude-github-action@v1
        with:
          api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: claude-3-5-sonnet
          input: ${{ steps.prompt.outputs.body }}
        # This action SHOULD return JSON with per-check PASS/FAIL and a human message.

      - name: Post comment with results
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const result = JSON.parse(`${
              {{"${{ steps.claude_call.outputs.result }}"}}`
            }`);
            // result expected: {checks: [{id, status:"PASS"/"FAIL", message}], summary}
            let body = "### Claude PR Checklist Results\n\n";
            if (result.summary) body += result.summary + "\n\n";
            body += "| Check | Result | Notes |\n|---|---:|---|\n";
            for (const c of result.checks) {
              body += `| ${c.title} | ${c.status === "PASS" ? "✅ PASS" : "❌ FAIL"} | ${c.message || ''} |\n`;
            }
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body
            });

      - name: Fail job if any 'error' check failed
        if: ${{ steps.claude_call.outputs.has_errors == 'true' }}
        run: |
          echo "One or more required checks failed according to Claude."
          exit 1
